name: Update Time in README
on:
  schedule:
    - cron: '*/5 * * * *'  
  workflow_dispatch:      

jobs:
  update-time:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 
          
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          
      - name: Pull latest changes
        run: |
          git pull origin main
          
      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: 'hh:mm:ss A dddd DD MMMM YYYY'   
          timezone: 'Asia/Kathmandu'
          
      - name: Update README with current time
        run: |
          TIME="${{ steps.current-time.outputs.formattedTime }}"
          DATETIME="${{ steps.current-time.outputs.time }}"
          
          # Create a backup and update the file
          cp README.md README.md.bak
          
          # Replace the TIME comment with the comment plus the time
          sed -i "/<!-- TIME -->/c\\  <!-- TIME -->\n  <h2>üïê Current Time (Nepal)</h2>\n  <p align=\"center\">\n    <time datetime=\"$DATETIME\">$TIME</time>\n  </p>" README.md
          
      - name: Check for changes and commit
        run: |
          if ! git diff --quiet README.md; then
            git add README.md
            git commit -m "Update time to ${{ steps.current-time.outputs.formattedTime }}"
            
            # Try to push, retry if there are conflicts
            for i in {1..3}; do
              if git push origin main; then
                echo "Time updated successfully"
                break
              else
                echo "Push failed, attempt $i/3. Pulling and retrying..."
                git pull --rebase origin main
                if [ $i -eq 3 ]; then
                  echo "Failed to push after 3 attempts"
                  exit 1
                fi
              fi
            done
          else
            echo "No changes to commit"
          fi
